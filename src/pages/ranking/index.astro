---
import { Icon } from 'astro-icon/components';
import RankingItem from '@components/RankingItem';
import ScrollToTop from '@components/ScrollToTop.astro';
import PageLayout from '@layouts/Page.astro';
import { RANKING_MOCK } from '@data/ranking';
---

<PageLayout title="Ranking">
  <main class="container">
    <header class="header">
      <h1 class="title">Ranking</h1>

      <div class="search-wrapper">
        <p>Ingresa el nombre de tu usuario para ver tu colecci√≥n</p>

        <search>
          <input
            type="search"
            name="username"
            placeholder="Buscar"
            autocomplete="off"
            class="search-input"
          />
          <span class="search-icon">
            <Icon name="magnify" size={24} />
          </span>

          <button class="search-button">Buscar</button>
        </search>
      </div>
    </header>

    <section class="ranking-wrapper">
      <ul class="ranking">
        {RANKING_MOCK.map(item => <RankingItem {...item} />)}
      </ul>
    </section>
  </main>

  <ScrollToTop />
</PageLayout>

<style>
  .container {
    & .header {
      padding: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

      & .title {
        width: 45vw;
        position: relative;
        font-family: var(--font-family-primary);
        font-size: 5.5rem;
        user-select: none;
        text-align: center;
        margin: 1rem 0 2rem;

        &::after {
          content: '';
          position: absolute;
          height: 0.3rem;
          background: var(--rainbow-gradient);
          bottom: -1rem;
          left: 0;
          right: 0;
        }
      }

      & .search-wrapper {
        width: 43vw;
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
        padding: 1rem 1rem 2rem;

        & p {
          font-size: 1.2rem;
          font-weight: 600;
          margin: 0;
          flex: 0.7;
        }

        & search {
          --transition: 0.3s ease-in-out;
          --border: 1px;
          --input-size: 17rem;

          display: flex;
          gap: 1rem;
          position: relative;

          &::before {
            content: '';
            pointer-events: none;
            border-radius: 0.6rem;
            width: var(--input-size);
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            box-shadow: 0 0 1rem transparent;
            transition: box-shadow var(--transition);
          }

          &:has(:focus-within)::before {
            box-shadow: 0 0 1rem rgb(from var(--secondary-color) r g b / 0.5);
          }

          & .search-input {
            font-size: 1.1rem;
            width: var(--input-size);
            padding: 0.6rem 1.2rem 0.6rem 2.3rem;
            color: var(--secondary-color);
            border-radius: 0.6rem;
            border: var(--border) solid var(--secondary-color);
            background: transparent;
            transition: border var(--transition);

            &::placeholder {
              padding-left: 0.1rem;
              color: var(--secondary-color);
            }

            &:focus {
              outline: none;
              border-color: var(--secondary-color);
            }
          }

          & .search-icon {
            display: flex;
            align-items: center;
            position: absolute;
            top: 0.5rem;
            left: 0.5rem;
            bottom: 0.5rem;
            color: var(--secondary-color);
          }

          & .search-button {
            font-weight: 600;
            font-size: 0.9rem;
            padding: 0.6rem 1.2rem;
            border-radius: 0.6rem;
            border: 3px solid var(--secondary-color);
            color: var(--body-color);
            background-color: var(--secondary-color);
            box-shadow: 0 0 1rem transparent;
            cursor: pointer;

            transition:
              border var(--transition),
              color var(--transition),
              box-shadow var(--transition),
              transform var(--transition),
              background-color var(--transition);

            &:hover,
            &:focus {
              outline: none;
              color: var(--secondary-color);
              box-shadow: 0 0 1rem rgb(from var(--secondary-color) r g b / 0.5);
              background-color: transparent;
            }

            &:active {
              transform: scale(0.95);
            }
          }
        }
      }
    }

    & .ranking-wrapper {
      display: grid;
      place-content: center;
      padding: 1rem 0 5rem;

      & .ranking {
        margin: 0;
        padding: 0;
        list-style: none;
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
    }
  }
</style>

<script>
  const BASE_URL = import.meta.env.BASE_URL;
  const searchInput = document.querySelector<HTMLInputElement>('.search-input');
  const searchButton = document.querySelector<HTMLButtonElement>('.search-button');

  function searchUser() {
    const username = searchInput?.value.trim().toLowerCase();

    if (username) {
      location.href = `${BASE_URL}/ranking/${username}`;
    }
  }

  searchInput?.addEventListener('keydown', (event: KeyboardEvent) => {
    if (event.key === 'Enter') {
      searchUser();
    }
  });
  searchButton?.addEventListener('click', searchUser);
</script>
