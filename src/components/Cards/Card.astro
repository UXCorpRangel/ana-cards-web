---
import {
  cardCategoryColors,
  cardCategoryLabels,
  type AnaCard,
  type CardCategory
} from '@contracts';
import { stringifyCardNumber } from '@utils';
import { Icon } from 'astro-icon/components';

const BASE_URL = import.meta.env.BASE_URL;

type CardSize = 'small' | 'large';

interface Props extends AnaCard {
  flip?: boolean;
  size?: CardSize;
}
const {
  id,
  name,
  description,
  image,
  category,
  level = 1,
  flip = false,
  size = 'small'
} = Astro.props;

function getStyledCard(cat: CardCategory, size: CardSize) {
  return {
    '--category-color': cardCategoryColors[cat],
    '--size': `${size === 'large' ? '25vw' : '12vw'};`
  };
}
---

<div class={`atropos card-${id}`}>
  <div class="atropos-scale">
    <div class="atropos-rotate">
      <div
        class="atropos-inner card-wrapper"
        style={getStyledCard(category, size)}
        data-card-id={id}
      >
        <div class:list={['card', { rotate: !flip }]} data-card-id={id} data-card-level={level}>
          <div class="card-front" data-card-id={id} data-card-level={level}>
            <h1 class="title">{name}</h1>

            <div class="image">
              <img src={`${BASE_URL}/assets/images/cards/${image}`} loading="lazy" />
            </div>

            <p class="content">{description}</p>

            <span class="footer">{stringifyCardNumber(id)}</span>

            <div class="category">
              <Icon
                name={`categories/${category}`}
                title={cardCategoryLabels[category]}
                size={42}
              />
            </div>

            <div class="level-dots">
              {Array.from({ length: level }, () => <span class="dot" />).slice(0, 50)}
            </div>

            <div class="shine"></div>
          </div>

          <div class="card-back">
            <img class="logo" src={`${BASE_URL}/assets/images/logo.png`} />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .card {
    --noise: url('/ana-cards-web/assets/images/textures/noise.png');
    --grain: url('/ana-cards-web/assets/images/textures/grain.png');
    --paper: url('/ana-cards-web/assets/images/textures/paper.png');

    --default-size: 12vw;

    --bgcolor: var(--card-bgcolor-1);
    --border-color: var(--card-border-color);
    --border-size: calc(var(--size, var(--default-size)) / 43);
    --border-radius: calc(var(--size, var(--default-size)) / 18);

    cursor: pointer;
    position: relative;
    aspect-ratio: 15 / 23;
    width: var(--size, var(--default-size));
    container: card / inline-size;
    transform-style: preserve-3d;
    transition: transform 0.6s ease-in-out;

    &.rotate {
      transform: rotateY(180deg);
    }

    & .card-front,
    & .card-back {
      aspect-ratio: 15 / 23;
      width: var(--size, var(--default-size));
      box-sizing: border-box;

      position: absolute;
      inset: 0;

      display: flex;
      overflow: hidden;
      user-select: none;
      pointer-events: none;
      flex-direction: column;
      backface-visibility: hidden;

      color: var(--text-color);
      background-color: var(--bgcolor);

      border-radius: var(--border-radius);
      border: var(--border-size) solid var(--border-color);
    }

    & .card-front {
      --z-image-border: -1;
      --z-image: 1;
      --z-shine: 2;
      --z-footer: 3;

      z-index: 1;
      box-shadow: 0 0 1.5rem 0.1rem rgb(from var(--category-color) r g b / 0.4);

      &::after {
        content: '';
        position: absolute;
        pointer-events: none;
        inset: 0;
        z-index: 1;
        opacity: 0.25;
        display: block;
        mix-blend-mode: overlay;
        background-blend-mode: overlay, overlay;
        background-clip: padding-box, padding-box;
        background-image: var(--noise), var(--paper);
      }

      & .title {
        margin: 0;
        font-size: 7.9cqi;
        font-weight: 400;
        font-family: var(--font-family-primary);
        padding: 1.5cqi 2.7cqi 0;
      }

      & .category {
        overflow: hidden;
        position: absolute;
        top: 0;
        right: 0;

        width: 21cqi;
        height: 39cqi;
        display: flex;
        align-items: start;
        justify-content: end;
        padding: 0.3cqi 2cqi;

        color: var(--bgcolor);
        background-color: var(--category-color);
        clip-path: polygon(0 0, 100% 0, 100% 100%);

        & svg {
          margin-inline-end: 3cqi;
          padding-block-start: 0.3cqi;
          width: calc(var(--size, var(--default-size)) / 9.3);
          height: calc(var(--size, var(--default-size)) / 9.3);
        }
      }

      & .image {
        --cover-radius: 2.7cqi;
        --cover-border: 1cqi;

        z-index: var(--z-image);
        height: 93cqi;
        width: auto;
        margin: 0 3%;

        overflow: hidden;
        border-radius: var(--cover-radius);
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;

        &::before {
          content: '';
          z-index: var(--z-image-border);
          position: absolute;
          inset: 0;
          background: var(--rainbow-gradient);
        }

        & img {
          z-index: var(--z-image);
          padding: var(--cover-border);
          width: calc(100% - (var(--cover-border) * 2));
          height: calc(100% - (var(--cover-border) * 2));
          border-radius: var(--cover-radius);
          object-fit: cover;
        }
      }

      & .content {
        margin: 0;
        font-size: 4.07cqi;
        font-weight: 600;
        text-wrap: pretty;
        text-align: center;
        font-family: var(--font-family-secondary);

        overflow: hidden;
        height: 33.6cqi;
        padding: 3cqi 4.2cqi;
      }

      & .footer {
        display: flex;
        align-items: center;
        justify-content: center;

        font-size: 3.3cqi;
        font-weight: 800;
        font-family: var(--font-family-extra);
        text-align: center;
        text-transform: uppercase;
        color: var(--category-color, var(--card-text-color));

        z-index: var(--z-footer);
        height: 2.1cqi;
        padding: 1.2cqi 3cqi;
        position: absolute;
        inset-block-end: 0;
        inset-inline-start: 50%;
        transform: translateX(-50%);

        border-start-end-radius: 3cqi;
        border-start-start-radius: 3cqi;
        background-color: var(--border-color);
      }

      & .level-dots {
        position: absolute;
        inset-block-start: 15.9cqi;
        inset-inline-start: 0.6cqi;
        padding-block-end: 1cqi;

        gap: 1cqi;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;

        & .dot {
          width: 1.5cqi;
          aspect-ratio: 1 / 1;
          border-radius: 50%;
          background-color: var(--category-color);

          &:nth-child(5n) {
            background-color: #d22222;
          }
        }
      }

      & .shine {
        --shine-tex-size: 50%;
        --shine-tex-pos: center;
        --shine-tex-blend: exclusion;

        --shine-g1-pos: 0% var(--shine-pos-y, 50%);
        --shine-g1-blend: hue;

        --shine-g2-pos: var(--shine-pos-x) var(--shine-pos-y);
        --shine-g2-blend: hard-light;

        --shine-radial-size: 200%;
        --shine-radial-pos: var(--shine-pos-x) var(--shine-pos-y);
        --shine-radial-blend: exclusion;

        width: 100%;
        height: 100%;
        z-index: var(--z-shine);
        position: absolute;
        inset: 0;
        transition: 0.3s ease;
        mix-blend-mode: color-dodge;

        background-image: var(--shine-texture, none), var(--shine-gradient-1, none),
          var(--shine-gradient-2, none), var(--shine-radial-gradient, none);

        background-size:
          var(--shine-tex-size),
          200% 700%,
          300%,
          var(--shine-radial-size);

        background-position:
          var(--shine-tex-pos),
          var(--shine-g1-pos),
          var(--shine-pos-x, 50%) var(--shine-pos-y, 50%),
          var(--shine-radial-pos);

        background-blend-mode: var(--shine-tex-blend), var(--shine-g1-blend), var(--shine-g2-blend),
          var(--shine-radial-blend);

        filter: brightness(calc((var(--hyperspace, 0) * 0.3) + 0.5)) contrast(2) saturate(1.5);

        &::after {
          content: '';
          width: 100%;
          height: 100%;
          z-index: var(--z-shine);
          position: absolute;
          inset: 0;
          mix-blend-mode: exclusion;

          background-image: var(--shine-texture, none), var(--shine-gradient-1, none),
            var(--shine-gradient-2, none), var(--shine-radial-gradient, none);

          background-size:
            var(--shine-tex-size),
            200% 400%,
            195%,
            var(--shine-radial-size);

          background-position:
            var(--shine-tex-pos),
            var(--shine-g1-pos),
            calc(var(--shine-pos-x, 50%) * -1) calc(var(--shine-pos-y, 50%) * -1),
            var(--shine-radial-pos);

          background-blend-mode: var(--shine-tex-blend), var(--shine-g1-blend),
            var(--shine-g2-blend), var(--shine-radial-blend);

          filter: brightness(calc((var(--hyperspace) * 0.5) + 0.8)) contrast(1.6) saturate(1.4);
        }

        .card-front[data-card-level] & {
          --shine-texture: url('/ana-cards-web/assets/images/textures/diamonds.webp');

          --shine-gradient-1: repeating-linear-gradient(
            0deg,
            #ff7773 calc(5% * 1),
            #ffed5f calc(5% * 2),
            #a8ff5f calc(5% * 3),
            #83fff7 calc(5% * 4),
            #7894ff calc(5% * 5),
            #d875ff calc(5% * 6),
            #ff7773 calc(5% * 7)
          );

          --shine-gradient-2: repeating-linear-gradient(
            133deg,
            #0e152e 0%,
            #8fa3a3 3.8%,
            #8fc1c1 4.5%,
            #8fa3a3 5.2%,
            #0e152e 10%,
            #0e152e 12%
          );

          --shine-radial-gradient: radial-gradient(
            farthest-corner circle at var(--shine-margin-x, 50%) var(--shine-margin-y, 50%),
            rgb(0 0 0 / 0.1) 12%,
            rgb(0 0 0 / 0.15) 20%,
            rgb(0 0 0 / 0.25) 120%
          );
        }

        .card-front[data-card-level='1'] & {
          --shine-texture: none;
          --shine-gradient-1: none;
          --shine-gradient-2: none;
          --shine-radial-gradient: none;

          display: none;
        }

        .card-front[data-card-level='2'] & {
          --shine-texture: url('/ana-cards-web/assets/images/textures/metal.webp');
        }

        .card-front[data-card-level='3'] & {
          --shine-texture: url('/ana-cards-web/assets/images/textures/crossover.webp');
        }

        .card-front[data-card-level='4'] & {
          --shine-texture: url('/ana-cards-web/assets/images/textures/wave.webp');
        }

        .card-front[data-card-level='5'] & {
          --shine-texture: url('/ana-cards-web/assets/images/textures/stamp.webp');
        }
      }
    }

    & .card-back {
      z-index: 0;
      align-items: center;
      justify-content: center;
      transform: rotateY(180deg);

      background-image: radial-gradient(
          48.42% 48.42% ellipse at center top,
          rgb(from var(--primary-color) r g b / 0.2) 0%,
          transparent 100%
        ),
        radial-gradient(
          48.42% 48.42% ellipse at center bottom,
          rgb(from var(--secondary-color) r g b / 0.2) 0%,
          transparent 100%
        );

      animation: card-shadow 1.5s infinite alternate;

      /* box-shadow:
        0 -1rem 1.2rem 0.1rem rgb(from var(--primary-color) r g b / 0.4),
        0 1rem 1.2rem 0.1rem rgb(from var(--secondary-color) r g b / 0.4); */

      &::before {
        content: '';
        position: absolute;
        pointer-events: none;
        inset: 0;
        z-index: 1;
        opacity: 0.25;
        display: block;
        mix-blend-mode: multiply;
        background-blend-mode: multiply, overlay;
        background-clip: padding-box, padding-box;
        background-image: var(--noise), var(--grain);
      }

      & .logo {
        z-index: 1;
        width: 80%;
        object-fit: contain;
        mix-blend-mode: exclusion;
      }
    }
  }

  .atropos {
    transition: scale 0.3s ease-in-out;

    &.hidden-atropos {
      scale: 0;
    }

    & .atropos-inner {
      border-radius: calc(var(--size, 12vw) / 18);
      animation: card-shadow 1.5s infinite alternate;
    }
  }

  @keyframes card-shadow {
    from {
      box-shadow:
        0 0 1.5rem 0.1rem rgb(from var(--primary-color) r g b / 0.4),
        0 0 1.5rem 0.1rem rgb(from var(--secondary-color) r g b / 0.4);
    }

    to {
      box-shadow: 0 0 1.5rem 0.1rem rgb(from var(--category-color) r g b / 0.4);
    }
  }
</style>
