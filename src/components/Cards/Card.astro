---
import {
  cardCategoryColors,
  cardCategoryLabels,
  type AnaCard,
  type CardCategory
} from '@contracts';
import { stringifyCardNumber } from '@utils';
import { Icon } from 'astro-icon/components';

type Props = AnaCard;
const { id, name, description, image, category, level = 1 } = Astro.props;

function getStyledCard(cat: CardCategory) {
  return { '--category-color': cardCategoryColors[cat] };
}
---

<div class={`atropos card-${id}`}>
  <div class="atropos-scale">
    <div class="atropos-rotate">
      <div class="atropos-inner card-wrapper" style={getStyledCard(category)} data-card-id={id}>
        <div class="card" data-card-id={id} data-card-level={level}>
          <div class="card-front" data-card-id={id} data-card-level={level}>
            <h1 class="card-title">{name}</h1>

            <div class="card-image">
              <img src={`/assets/images/cards/${image}`} loading="lazy" />
            </div>

            <p class="card-content">{description}</p>

            <span class="card-footer">{stringifyCardNumber(id)}</span>

            <div class="card-category">
              <Icon
                name={`categories/${category}`}
                title={cardCategoryLabels[category]}
                size={42}
              />
            </div>

            <div class="card-level-dots">
              {Array.from({ length: level }, () => <span class="card-level-dot" />).slice(0, 50)}
            </div>

            <div class="card-shine"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .card-wrapper {
    --size: 27vw;

    @media (width <= 1024px) {
      --size: 45vw;
    }
    @media (width <= 768px) {
      --size: 60vw;
    }

    @media (width <= 640px) {
      --size: 66vw;
    }

    border-radius: calc(var(--size, 12vw) / 18);
    animation: card-shadow-current 1.5s infinite alternate;

    .card {
      --bgcolor: var(--card-bgcolor-1);
      --border-color: var(--card-border-color);
      --border-size: calc(var(--size) / 43);
      --border-radius: calc(var(--size) / 18);

      cursor: zoom-out;
      position: relative;
      aspect-ratio: 15 / 23;
      width: var(--size);
      container: card / inline-size;
      transition: transform 0.6s ease-in-out;

      & .card-front {
        aspect-ratio: 15 / 23;
        width: var(--size);
        box-sizing: border-box;
        content-visibility: auto;

        position: absolute;
        inset: 0;

        display: flex;
        overflow: hidden;
        user-select: none;
        pointer-events: none;
        flex-direction: column;

        color: var(--text-color);
        background-color: var(--bgcolor);

        border-radius: var(--border-radius);
        border: var(--border-size) solid var(--border-color);
        box-shadow: 0 0 1.5rem 0.1rem rgb(from var(--category-color) r g b / 0.4);
      }
    }
  }

  .atropos {
    transition: scale 0.3s ease-in-out;

    &.hidden-atropos {
      scale: 0;
    }
  }
</style>
